# 사용자 인증 정보
# 수동으로 추가해야 합니다!! htpasswd와 비슷한 기능 구현을 위해서는 별도 프로그램으로 구현해야함.

# 1. Apache나 Nqinx는 C로 작성되어 .htpasswd파일에서 사용자 관리
# 2. Apache는 htpasswd 명령어도 제공하여 사용자 추가, 암호화된 비밀번호 생성 등 가능
# 3. java에서 일반적인 형식인 .properties 또는 .json 중 앞에 껄로 파일 생성함.

#이름=해쉬화된 비밀번호 형태로 수정(여러 유저 관리)
user1=5f4dcc3b5aa765d61d8327deb882cf99
user2=2c6ee24b09816a6f14f95d1698b24c5b
admin=7c6a180b36896a0a8c02787ee8f4b1e4

# htpasswd 같은 프로그램..
# import org.mindrot.jbcrypt.BCrypt;

# import java.io.*;
# import java.util.Scanner;

# public class HtpasswdSimulator {

#     private static final String USERS_FILE = "config/users.properties";

#     // 비밀번호 해시화
#     public static String hashPassword(String password) {
#         return BCrypt.hashpw(password, BCrypt.gensalt());
#     }

#     // 사용자 추가
#     public static void addUser(String username, String password) throws IOException {
#         String hashedPassword = hashPassword(password);
#         try (BufferedWriter writer = new BufferedWriter(new FileWriter(USERS_FILE, true))) {
#             writer.write(username + "=" + hashedPassword);
#             writer.newLine();
#         }
#     }

#     // 사용자 목록 확인
#     public static void showUsers() throws IOException {
#         try (BufferedReader reader = new BufferedReader(new FileReader(USERS_FILE))) {
#             String line;
#             while ((line = reader.readLine()) != null) {
#                 System.out.println(line);
#             }
#         }
#     }

#     public static void main(String[] args) throws IOException {
#         Scanner scanner = new Scanner(System.in);

#         System.out.println("Welcome to the htpasswd simulator!");

#         System.out.print("Enter username: ");
#         String username = scanner.nextLine();

#         System.out.print("Enter password: ");
#         String password = scanner.nextLine();

#         // 사용자 추가
#         addUser(username, password);

#         // 사용자 목록 출력
#         showUsers();
#     }
# }

